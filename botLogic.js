const fs = require("fs");

let users = {};

if (fs.existsSync("./users.json")) {
  users = JSON.parse(fs.readFileSync("./users.json", "utf8"));
}

const workouts = [
  "–î–µ–Ω—å 1: 15 –ø—Ä–∏—Å—ñ–¥–∞–Ω—å, 10 –≤—ñ–¥–∂–∏–º–∞–Ω—å, 20 —Å–µ–∫ –ø–ª–∞–Ω–∫–∏.",
  "–î–µ–Ω—å 2: ...",
  // —ñ —Ç. –¥. –¥–æ 7
];

function saveUsers() {
  fs.writeFileSync("./users.json", JSON.stringify(users));
}

function handleStart(bot, msg) {
  const id = msg.chat.id;

  if (!users[id]) {
    users[id] = { day: 0 };
    saveUsers();
  }

  bot.sendMessage(
    id,
    `–ü—Ä–∏–≤—ñ—Ç! –ü–æ—á–∏–Ω–∞—î–º–æ 7-–¥–µ–Ω–Ω–∏–π —á–µ–ª–µ–Ω–¥–∂. –ù–∞—Ç–∏—Å–Ω–∏ "–ó—Ä–æ–±–ª–µ–Ω–æ ‚úÖ", —â–æ–π–Ω–æ –∑–∞–≤–µ—Ä—à–∏—à –≤–ø—Ä–∞–≤–∏.`
  );
  sendWorkout(bot, id);
}

function sendWorkout(bot, id) {
  const day = users[id].day;

  if (day >= workouts.length) {
    bot.sendMessage(
      id,
      `–¢–∏ –∑–∞–≤–µ—Ä—à–∏–≤ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π —á–µ–ª–µ–Ω–¥–∂! –•–æ—á–µ—à –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏? –û—Å—å —Ç–≤—ñ–π –Ω–∞—Å—Ç—É–ø–Ω–∏–π –∫—Ä–æ–∫...`
    );
    // —Ç—É—Ç –≤—Å—Ç–∞–≤–∏—Ç–∏ Stripe –ø–æ—Å–∏–ª–∞–Ω–Ω—è
  } else {
    bot.sendMessage(id, workouts[day], {
      reply_markup: {
        keyboard: [["–ó—Ä–æ–±–ª–µ–Ω–æ ‚úÖ"]],
        resize_keyboard: true,
        one_time_keyboard: true,
      },
    });
  }
}

function handleDone(bot, msg) {
  const id = msg.chat.id;

  if (!users[id]) return;

  users[id].day += 1;
  saveUsers();

  bot.sendMessage(id, `–ö—Ä–∞—Å–∞–≤–∞! –ì–æ—Ç—É–π—Å—è –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –¥–Ω—è üí™`);
  sendWorkout(bot, id);
}

module.exports = { handleStart, handleDone };
